<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="55">
  <HTTPTask id="6531" hostname="securepubads.g.doubleclick.net" path="/pagead/adview?ai=C1UjZjxFhXNjqHMi8ugSiqpmgC_O7251VwcKYkb4IiPCr044OEAEg76j1AWDlyuWDtA6gAZOgtMcDyAECqQJoDILTGx1OPuACAKgDAcgDmQSqBPABT9DjkV1KCNYz4dp8XOyaJGXW9JXeyXXGxIBfixntQNB8psB6QGYuuXl_-jhW9N1s7-sj6g_bq2ZJlM5O_ycieLTKTq5NctZ-fh1BBjGyEN8q4t2WZlxlfg-PZRaOOgrw_8j1yBGVpKnzTdzeGeDym5bGJNdoo-yfUOWnsaXulMImFi-1emdrCU9QYuOvBhUANGIqtcwZDSTDADd0Yx3gqyLnWCbV4WgbkDbxqM_DIClHpymRbdrBABWZTZxCy1Btj5lVsFWvBQs9GdI9_SP-tW5K5V1uhi2JD4iCbubVMr0pnVfy9Sw22PBjX_QifokNwAT4s9bI2AHgBAGSBQQIBBgBkgUECAUYBKAGAoAH1d_LOKgHjs4bqAfVyRuoB6gGqAe6BqgH2csbqAfPzBuoB6a-G9gHAfIHBBConC3SCAcIgGEQARgBgAoB2BMM&amp;sigh=X7S9MsQM2PY&amp;tpd=AGWhJmvesBlWPLqunPV5SAGVtAwrpbDuuSoKHT9ARMhn-J_Hww" url="https://securepubads.g.doubleclick.net/pagead/adview?ai=C1UjZjxFhXNjqHMi8ugSiqpmgC_O7251VwcKYkb4IiPCr044OEAEg76j1AWDlyuWDtA6gAZOgtMcDyAECqQJoDILTGx1OPuACAKgDAcgDmQSqBPABT9DjkV1KCNYz4dp8XOyaJGXW9JXeyXXGxIBfixntQNB8psB6QGYuuXl_-jhW9N1s7-sj6g_bq2ZJlM5O_ycieLTKTq5NctZ-fh1BBjGyEN8q4t2WZlxlfg-PZRaOOgrw_8j1yBGVpKnzTdzeGeDym5bGJNdoo-yfUOWnsaXulMImFi-1emdrCU9QYuOvBhUANGIqtcwZDSTDADd0Yx3gqyLnWCbV4WgbkDbxqM_DIClHpymRbdrBABWZTZxCy1Btj5lVsFWvBQs9GdI9_SP-tW5K5V1uhi2JD4iCbubVMr0pnVfy9Sw22PBjX_QifokNwAT4s9bI2AHgBAGSBQQIBBgBkgUECAUYBKAGAoAH1d_LOKgHjs4bqAfVyRuoB6gGqAe6BqgH2csbqAfPzBuoB6a-G9gHAfIHBBConC3SCAcIgGEQARgBgAoB2BMM&amp;sigh=X7S9MsQM2PY&amp;tpd=AGWhJmvesBlWPLqunPV5SAGVtAwrpbDuuSoKHT9ARMhn-J_Hww" ip="172.217.163.130" port="443" connectionId="361" origin="Primary" frame="1" startDateTime="2019-02-11T11:47:35.363+05:30" startTime="1041673125" endTime="1041673375">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>YWk9QzFValpqeEZoWE5qcUhNaTh1Z1NpcXBtZ0NfTzcyNTFWd2NLWWtiNElpUENyMDQ0T0VBRWc3NmoxQVdEbHl1V0R0QTZnQVpPZ3RNY0R5QUVDcVFKb0RJTFRHeDFPUHVBQ0FLZ0RBY2dEbVFTcUJQQUJUOURqa1YxS0NOWXo0ZHA4WE95YUpHWFc5SlhleVhYR3hJQmZpeG50UU5COHBzQjZRR1l1dVhsXy1qaFc5TjFzNy1zajZnX2JxMlpKbE01T195Y2llTFRLVHE1TmN0Wi1maDFCQmpHeUVOOHE0dDJXWmx4bGZnLVBaUmFPT2dyd184ajF5QkdWcEtuelRkemVHZUR5bTViR0pOZG9vLXlmVU9XbnNhWHVsTUltRmktMWVtZHJDVTlRWXVPdkJoVUFOR0lxdGN3WkRTVERBRGQwWXgzZ3F5TG5XQ2JWNFdnYmtEYnhxTV9ESUNsSHB5bVJiZHJCQUJXWlRaeEN5MUJ0ajVsVnNGV3ZCUXM5R2RJOV9TUC10VzVLNVYxdWhpMkpENGlDYnViVk1yMHBuVmZ5OVN3MjJQQmpYX1FpZm9rTndBVDRzOWJJMkFIZ0JBR1NCUVFJQkJnQmtnVUVDQVVZQktBR0FvQUgxZF9MT0tnSGpzNGJxQWZWeVJ1b0I2Z0dxQWU2QnFnSDJjc2JxQWZQekJ1b0I2YS1HOWdIQWZJSEJCQ29uQzNTQ0FjSWdHRVFBUmdCZ0FvQjJCTU0mc2lnaD1YN1M5TXNRTTJQWSZ0cGQ9QUdXaEptdmVzQmxXUExxdW5QVjVTQUdWdEF3cnBiRHV1U29LSFQ5QVJNaG4tSl9Id3c=</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="ai" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>QzFValpqeEZoWE5qcUhNaTh1Z1NpcXBtZ0NfTzcyNTFWd2NLWWtiNElpUENyMDQ0T0VBRWc3NmoxQVdEbHl1V0R0QTZnQVpPZ3RNY0R5QUVDcVFKb0RJTFRHeDFPUHVBQ0FLZ0RBY2dEbVFTcUJQQUJUOURqa1YxS0NOWXo0ZHA4WE95YUpHWFc5SlhleVhYR3hJQmZpeG50UU5COHBzQjZRR1l1dVhsXy1qaFc5TjFzNy1zajZnX2JxMlpKbE01T195Y2llTFRLVHE1TmN0Wi1maDFCQmpHeUVOOHE0dDJXWmx4bGZnLVBaUmFPT2dyd184ajF5QkdWcEtuelRkemVHZUR5bTViR0pOZG9vLXlmVU9XbnNhWHVsTUltRmktMWVtZHJDVTlRWXVPdkJoVUFOR0lxdGN3WkRTVERBRGQwWXgzZ3F5TG5XQ2JWNFdnYmtEYnhxTV9ESUNsSHB5bVJiZHJCQUJXWlRaeEN5MUJ0ajVsVnNGV3ZCUXM5R2RJOV9TUC10VzVLNVYxdWhpMkpENGlDYnViVk1yMHBuVmZ5OVN3MjJQQmpYX1FpZm9rTndBVDRzOWJJMkFIZ0JBR1NCUVFJQkJnQmtnVUVDQVVZQktBR0FvQUgxZF9MT0tnSGpzNGJxQWZWeVJ1b0I2Z0dxQWU2QnFnSDJjc2JxQWZQekJ1b0I2YS1HOWdIQWZJSEJCQ29uQzNTQ0FjSWdHRVFBUmdCZ0FvQjJCTU0=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="sigh" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>WDdTOU1zUU0yUFk=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="tpd" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>QUdXaEptdmVzQmxXUExxdW5QVjVTQUdWdEF3cnBiRHV1U29LSFQ5QVJNaG4tSl9Id3c=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Accept" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aW1hZ2UvcG5nLCBpbWFnZS9zdmcreG1sLCBpbWFnZS9qeHIsIGltYWdlLyo7cT0wLjgsICovKjtxPTAuNQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly90cGMuZ29vZ2xlc3luZGljYXRpb24uY29tL3NhZmVmcmFtZS8xLTAtMzEvaHRtbC9jb250YWluZXIuaHRtbD92PTEtMC0zMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2VjdXJlcHViYWRzLmcuZG91YmxlY2xpY2submV0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SURFPUFIV3FUVW15X1lMNVBHaXpkNk96bkc2Q3Ewa05FR01RMFVZWjBVblotRmpDbWVzd2FDSVlOU2NoMXlydnVId2E7IERTSUQ9Tk9fREFUQQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9wYWdlYWQvYWR2aWV3P2FpPUMxVWpaanhGaFhOanFITWk4dWdTaXFwbWdDX083MjUxVndjS1lrYjRJaVBDcjA0NE9FQUVnNzZqMUFXRGx5dVdEdEE2Z0FaT2d0TWNEeUFFQ3FRSm9ESUxUR3gxT1B1QUNBS2dEQWNnRG1RU3FCUEFCVDlEamtWMUtDTll6NGRwOFhPeWFKR1hXOUpYZXlYWEd4SUJmaXhudFFOQjhwc0I2UUdZdXVYbF8tamhXOU4xczctc2o2Z19icTJaSmxNNU9feWNpZUxUS1RxNU5jdFotZmgxQkJqR3lFTjhxNHQyV1pseGxmZy1QWlJhT09ncndfOGoxeUJHVnBLbnpUZHplR2VEeW01YkdKTmRvby15ZlVPV25zYVh1bE1JbUZpLTFlbWRyQ1U5UVl1T3ZCaFVBTkdJcXRjd1pEU1REQURkMFl4M2dxeUxuV0NiVjRXZ2JrRGJ4cU1fRElDbEhweW1SYmRyQkFCV1pUWnhDeTFCdGo1bFZzRld2QlFzOUdkSTlfU1AtdFc1SzVWMXVoaTJKRDRpQ2J1YlZNcjBwblZmeTlTdzIyUEJqWF9RaWZva053QVQ0czliSTJBSGdCQUdTQlFRSUJCZ0JrZ1VFQ0FVWUJLQUdBb0FIMWRfTE9LZ0hqczRicUFmVnlSdW9CNmdHcUFlNkJxZ0gyY3NicUFmUHpCdW9CNmEtRzlnSEFmSUhCQkNvbkMzU0NBY0lnR0VRQVJnQmdBb0IyQk1NJnNpZ2g9WDdTOU1zUU0yUFkmdHBkPUFHV2hKbXZlc0JsV1BMcXVuUFY1U0FHVnRBd3JwYkR1dVNvS0hUOUFSTWhuLUpfSHd3IEhUVFAvMS4xDQpBY2NlcHQ6IGltYWdlL3BuZywgaW1hZ2Uvc3ZnK3htbCwgaW1hZ2UvanhyLCBpbWFnZS8qO3E9MC44LCAqLyo7cT0wLjUNClJlZmVyZXI6IGh0dHBzOi8vdHBjLmdvb2dsZXN5bmRpY2F0aW9uLmNvbS9zYWZlZnJhbWUvMS0wLTMxL2h0bWwvY29udGFpbmVyLmh0bWw/dj0xLTAtMzINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbw0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpIb3N0OiBzZWN1cmVwdWJhZHMuZy5kb3VibGVjbGljay5uZXQNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkNvb2tpZTogSURFPUFIV3FUVW15X1lMNVBHaXpkNk96bkc2Q3Ewa05FR01RMFVZWjBVblotRmpDbWVzd2FDSVlOU2NoMXlydnVId2E7IERTSUQ9Tk9fREFUQQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="IDE" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QUhXcVRVbXlfWUw1UEdpemQ2T3puRzZDcTBrTkVHTVEwVVlaMFVuWi1GakNtZXN3YUNJWU5TY2gxeXJ2dUh3YQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DSID" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Tk9fREFUQQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="P3P" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cG9saWN5cmVmPSJodHRwczovL2dvb2dsZWFkcy5nLmRvdWJsZWNsaWNrLm5ldC9wYWdlYWQvZ2NuX3AzcF8ueG1sIiwgQ1A9IkNVUmEgQURNYSBERVZhIFRBSW8gUFNBbyBQU0RvIE9VUiBJTkQgVU5JIFBVUiBJTlQgREVNIFNUQSBQUkUgQ09NIE5BViBPVEMgTk9JIERTUCBDT1Ii</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Timing-Allow-Origin" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Kg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAxMSBGZWIgMjAxOSAwNjowOToyMiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2FmZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alt-Svc" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cXVpYz0iOjQ0MyI7IG1hPTI1OTIwMDA7IHY9IjQ0LDQzLDM5Ig==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpQM1A6IHBvbGljeXJlZj0iaHR0cHM6Ly9nb29nbGVhZHMuZy5kb3VibGVjbGljay5uZXQvcGFnZWFkL2djbl9wM3BfLnhtbCIsIENQPSJDVVJhIEFETWEgREVWYSBUQUlvIFBTQW8gUFNEbyBPVVIgSU5EIFVOSSBQVVIgSU5UIERFTSBTVEEgUFJFIENPTSBOQVYgT1RDIE5PSSBEU1AgQ09SIg0KVGltaW5nLUFsbG93LU9yaWdpbjogKg0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgNClgtQ29udGVudC1UeXBlLU9wdGlvbnM6IG5vc25pZmYNCkRhdGU6IE1vbiwgMTEgRmViIDIwMTkgMDY6MDk6MjIgR01UDQpTZXJ2ZXI6IGNhZmUNCkNvbnRlbnQtTGVuZ3RoOiAwDQpYLVhTUy1Qcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrDQpBbHQtU3ZjOiBxdWljPSI6NDQzIjsgbWE9MjU5MjAwMDsgdj0iNDQsNDMsMzkiDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="1041673359" offset="0" length="433" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="6534" hostname="content.jwplatform.com" path="/libraries/GtooEHr3.js" url="https://content.jwplatform.com/libraries/GtooEHr3.js" ip="54.230.188.87" port="443" connectionId="370" origin="HTML" frame="1" startDateTime="2019-02-11T11:47:35.553+05:30" startTime="1041672828" endTime="1041673390">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Accept" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdCwgKi8qO3E9MC44</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y29udGVudC5qd3BsYXRmb3JtLmNvbQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly93d3cubW92aWUtbGlzdC5jb20vdHJhaWxlcnMvcG9zdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tv</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9saWJyYXJpZXMvR3Rvb0VIcjMuanMgSFRUUC8xLjENCkFjY2VwdDogYXBwbGljYXRpb24vamF2YXNjcmlwdCwgKi8qO3E9MC44DQpIb3N0OiBjb250ZW50Lmp3cGxhdGZvcm0uY29tDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpSZWZlcmVyOiBodHRwczovL3d3dy5tb3ZpZS1saXN0LmNvbS90cmFpbGVycy9wb3N0DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>50495</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NTA0OTU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Access-Control-Allow-Origin" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0xNTAsIG1heC1zdGFsZT0xODA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAxMSBGZWIgMjAxOSAwNjowOToyMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAxMSBGZWIgMjAxOSAwNjoxMTo1MSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>b3BlbnJlc3R5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Cache" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWlzcyBmcm9tIGNsb3VkZnJvbnQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Via" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS4xIDZiMjZiMDg0ZWRkMmY1OWQ0MDFmMDZhZjZhOTFiYjM1LmNsb3VkZnJvbnQubmV0IChDbG91ZEZyb250KQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Amz-Cf-Id" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZGhIY050MlJSMmI4UDV0ZTZNM0JfMGtVYUM0UnlxT2dDVHBTUDVBakVJOVh2LTJJTExScHlRPT0=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IHRleHQvamF2YXNjcmlwdDsgY2hhcnNldD11dGYtOA0KQ29udGVudC1MZW5ndGg6IDUwNDk1DQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46ICoNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MTUwLCBtYXgtc3RhbGU9MTgwDQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpEYXRlOiBNb24sIDExIEZlYiAyMDE5IDA2OjA5OjIxIEdNVA0KRXhwaXJlczogTW9uLCAxMSBGZWIgMjAxOSAwNjoxMTo1MSBHTVQNClNlcnZlcjogb3BlbnJlc3R5DQpYLUNhY2hlOiBNaXNzIGZyb20gY2xvdWRmcm9udA0KVmlhOiAxLjEgNmIyNmIwODRlZGQyZjU5ZDQwMWYwNmFmNmE5MWJiMzUuY2xvdWRmcm9udC5uZXQgKENsb3VkRnJvbnQpDQpYLUFtei1DZi1JZDogZGhIY050MlJSMmI4UDV0ZTZNM0JfMGtVYUM0UnlxT2dDVHBTUDVBakVJOVh2LTJJTExScHlRPT0NCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="1041673375" offset="0" length="480" />
          <PacketInfo time="1041673390" offset="480" length="16360" />
          <PacketInfo time="1041673421" offset="16840" length="16384" />
          <PacketInfo time="1041673421" offset="33224" length="24" />
          <PacketInfo time="1041673437" offset="33248" length="16360" />
          <PacketInfo time="1041673625" offset="49608" length="24" />
          <PacketInfo time="1041673640" offset="49632" length="1343" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>