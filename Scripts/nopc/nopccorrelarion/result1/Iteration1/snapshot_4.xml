<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="4">
  <HTTPTask id="98" hostname="nopc.shaft.com" path="/EmployeeDetails.aspx" url="http://nopc.shaft.com/EmployeeDetails.aspx" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16335" connectionId="1828" origin="Primary" encodingType="ANSI" startDateTime="2019-01-04T16:15:53.501+05:30" startTime="26619" endTime="27074" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL01haW4uYXNweA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9FbXBsb3llZURldGFpbHMuYXNweCBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL25vcGMuc2hhZnQuY29tL01haW4uYXNweA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBub3BjLnNoYWZ0LmNvbQ0KQ29va2llOiBBU1AuTkVUX1Nlc3Npb25JZD0yM3RubHIyMDVjZHFlZ3FubG1lZnRieWgNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>27404</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Cache-Control" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHJpdmF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-AspNet-Version" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NC4wLjMwMzE5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVNQLk5FVA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Mjc0MDQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwcml2YXRlDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvMTAuMA0KWC1Bc3BOZXQtVmVyc2lvbjogNC4wLjMwMzE5DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MTkgR01UDQpDb250ZW50LUxlbmd0aDogMjc0MDQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
    <HTTPTask id="99" hostname="nopc.shaft.com" path="/WebResource.axd?d=ZzoSQxDd3gw0cyuq4MTfZSHLibprAHzrWg-hkxZHsjN4X6f7qpj4wJmYQQZfUFfZ06OHLRyF4b6ZeX0t54SSJX_xzbPkE7f7cSG7TAH2LphS0OSyz44c_qyl9ZXSP3VCGefPEZDHYvyI1cIb8C7HjJACkjAUwer7aU6qj_o7qwNhB6EPx7ya45agyzxBGFs10&amp;t=634859606780000000" url="http://nopc.shaft.com/WebResource.axd?d=ZzoSQxDd3gw0cyuq4MTfZSHLibprAHzrWg-hkxZHsjN4X6f7qpj4wJmYQQZfUFfZ06OHLRyF4b6ZeX0t54SSJX_xzbPkE7f7cSG7TAH2LphS0OSyz44c_qyl9ZXSP3VCGefPEZDHYvyI1cIb8C7HjJACkjAUwer7aU6qj_o7qwNhB6EPx7ya45agyzxBGFs10&amp;t=634859606780000000" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16334" connectionId="1876" origin="HTML" encodingType="ANSI" ordinal="1" startDateTime="2019-01-04T16:15:53.635+05:30" startTime="26758" endTime="26933" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZD1aem9TUXhEZDNndzBjeXVxNE1UZlpTSExpYnByQUh6cldnLWhreFpIc2pONFg2ZjdxcGo0d0ptWVFRWmZVRmZaMDZPSExSeUY0YjZaZVgwdDU0U1NKWF94emJQa0U3ZjdjU0c3VEFIMkxwaFMwT1N5ejQ0Y19xeWw5WlhTUDNWQ0dlZlBFWkRIWXZ5STFjSWI4QzdIakpBQ2tqQVV3ZXI3YVU2cWpfbzdxd05oQjZFUHg3eWE0NWFneXp4QkdGczEwJnQ9NjM0ODU5NjA2NzgwMDAwMDAw</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="d" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>WnpvU1F4RGQzZ3cwY3l1cTRNVGZaU0hMaWJwckFIenJXZy1oa3haSHNqTjRYNmY3cXBqNHdKbVlRUVpmVUZmWjA2T0hMUnlGNGI2WmVYMHQ1NFNTSlhfeHpiUGtFN2Y3Y1NHN1RBSDJMcGhTME9TeXo0NGNfcXlsOVpYU1AzVkNHZWZQRVpESFl2eUkxY0liOEM3SGpKQUNrakFVd2VyN2FVNnFqX283cXdOaEI2RVB4N3lhNDVhZ3l6eEJHRnMxMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="t" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjM0ODU5NjA2NzgwMDAwMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9XZWJSZXNvdXJjZS5heGQ/ZD1aem9TUXhEZDNndzBjeXVxNE1UZlpTSExpYnByQUh6cldnLWhreFpIc2pONFg2ZjdxcGo0d0ptWVFRWmZVRmZaMDZPSExSeUY0YjZaZVgwdDU0U1NKWF94emJQa0U3ZjdjU0c3VEFIMkxwaFMwT1N5ejQ0Y19xeWw5WlhTUDNWQ0dlZlBFWkRIWXZ5STFjSWI4QzdIakpBQ2tqQVV3ZXI3YVU2cWpfbzdxd05oQjZFUHg3eWE0NWFneXp4QkdGczEwJnQ9NjM0ODU5NjA2NzgwMDAwMDAwIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbm9wYy5zaGFmdC5jb20vRW1wbG95ZWVEZXRhaWxzLmFzcHgNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83MS4wLjM1NzguOTggU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbm9wYy5zaGFmdC5jb20NCkNvb2tpZTogQVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0YnloDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>4010</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Cache-Control" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGlj</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwNCBKYW4gMjAyMCAwNToxMTowMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAxNSBPY3QgMjAxMiAyMzozNDozOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-AspNet-Version" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NC4wLjMwMzE5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDAxMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwdWJsaWMNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3MNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkV4cGlyZXM6IFNhdCwgMDQgSmFuIDIwMjAgMDU6MTE6MDEgR01UDQpMYXN0LU1vZGlmaWVkOiBNb24sIDE1IE9jdCAyMDEyIDIzOjM0OjM4IEdNVA0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvMTAuMA0KWC1Bc3BOZXQtVmVyc2lvbjogNC4wLjMwMzE5DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MTkgR01UDQpDb250ZW50LUxlbmd0aDogNDAxMA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="100" hostname="nopc.shaft.com" path="/WebResource.axd?d=2bOFskvEy7FAMadZ7iWGle4gJJaOWybr-LErWOlBWxW5EdnYndmPfe58xGT3iPsmjYjqNQUARbdOIueiZSjetW0OznJXVx05KOa7V-m4JfaI2FhK92A4udTHEP3VFJXW02mwxBDt49cSIBkCAZH-PedGBPdVYyZOXhsFBw2tSj_vWchS_jbzEA_33lX7AIdT0&amp;t=634859606780000000" url="http://nopc.shaft.com/WebResource.axd?d=2bOFskvEy7FAMadZ7iWGle4gJJaOWybr-LErWOlBWxW5EdnYndmPfe58xGT3iPsmjYjqNQUARbdOIueiZSjetW0OznJXVx05KOa7V-m4JfaI2FhK92A4udTHEP3VFJXW02mwxBDt49cSIBkCAZH-PedGBPdVYyZOXhsFBw2tSj_vWchS_jbzEA_33lX7AIdT0&amp;t=634859606780000000" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16346" connectionId="1880" origin="HTML" encodingType="ANSI" ordinal="2" startDateTime="2019-01-04T16:15:53.635+05:30" startTime="26758" endTime="27423" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZD0yYk9Gc2t2RXk3RkFNYWRaN2lXR2xlNGdKSmFPV3lici1MRXJXT2xCV3hXNUVkblluZG1QZmU1OHhHVDNpUHNtallqcU5RVUFSYmRPSXVlaVpTamV0VzBPem5KWFZ4MDVLT2E3Vi1tNEpmYUkyRmhLOTJBNHVkVEhFUDNWRkpYVzAybXd4QkR0NDljU0lCa0NBWkgtUGVkR0JQZFZZeVpPWGhzRkJ3MnRTal92V2NoU19qYnpFQV8zM2xYN0FJZFQwJnQ9NjM0ODU5NjA2NzgwMDAwMDAw</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="d" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MmJPRnNrdkV5N0ZBTWFkWjdpV0dsZTRnSkphT1d5YnItTEVyV09sQld4VzVFZG5ZbmRtUGZlNTh4R1QzaVBzbWpZanFOUVVBUmJkT0l1ZWlaU2pldFcwT3puSlhWeDA1S09hN1YtbTRKZmFJMkZoSzkyQTR1ZFRIRVAzVkZKWFcwMm13eEJEdDQ5Y1NJQmtDQVpILVBlZEdCUGRWWXlaT1hoc0ZCdzJ0U2pfdldjaFNfamJ6RUFfMzNsWDdBSWRUMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="t" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjM0ODU5NjA2NzgwMDAwMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9XZWJSZXNvdXJjZS5heGQ/ZD0yYk9Gc2t2RXk3RkFNYWRaN2lXR2xlNGdKSmFPV3lici1MRXJXT2xCV3hXNUVkblluZG1QZmU1OHhHVDNpUHNtallqcU5RVUFSYmRPSXVlaVpTamV0VzBPem5KWFZ4MDVLT2E3Vi1tNEpmYUkyRmhLOTJBNHVkVEhFUDNWRkpYVzAybXd4QkR0NDljU0lCa0NBWkgtUGVkR0JQZFZZeVpPWGhzRkJ3MnRTal92V2NoU19qYnpFQV8zM2xYN0FJZFQwJnQ9NjM0ODU5NjA2NzgwMDAwMDAwIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbm9wYy5zaGFmdC5jb20vRW1wbG95ZWVEZXRhaWxzLmFzcHgNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83MS4wLjM1NzguOTggU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbm9wYy5zaGFmdC5jb20NCkNvb2tpZTogQVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0YnloDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>1701</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Cache-Control" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGlj</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwNCBKYW4gMjAyMCAwNToxMTowMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAxNSBPY3QgMjAxMiAyMzozNDozOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-AspNet-Version" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NC4wLjMwMzE5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoyMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTcwMQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwdWJsaWMNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3MNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkV4cGlyZXM6IFNhdCwgMDQgSmFuIDIwMjAgMDU6MTE6MDIgR01UDQpMYXN0LU1vZGlmaWVkOiBNb24sIDE1IE9jdCAyMDEyIDIzOjM0OjM4IEdNVA0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvMTAuMA0KWC1Bc3BOZXQtVmVyc2lvbjogNC4wLjMwMzE5DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MjAgR01UDQpDb250ZW50LUxlbmd0aDogMTcwMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>77u/LlJhZENvbWJvQm94X09mZmljZTIwMDd7Y29sb3I6YmxhY2s7Zm9udDpub3JtYWwgMTJweCAiU2Vnb2UgVUkiLEFyaWFsLEhlbHZldGljYSxzYW5zLXNlcmlmO2xpbmUtaGVpZ2h0OjE2cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYklucHV0Q2VsbCwuUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiQXJyb3dDZWxse2JhY2tncm91bmQtaW1hZ2U6dXJsKCdXZWJSZXNvdXJjZS5heGQ/ZD1nTjJRWThqUzBZN0FwcDBycGNLSmhJSnFmdXhGOUUwY2VZS3NxaGNBZ1AyUjRlaElvUVpFNzRSQUVvTl93Zm5xa19IUEZqM0F0MVpHN1dvM1FRWHA4T3B3RTROUURmZTlreUtpb3ZUd1BNZDk4Mm5DVFZGLW1xTDgwSlVZbmZUYVUyS1JLWHhsa3lrcVRYaDFVSDJoc3k2UE9TaTdsRFI5dlJyNjRXM1BwQ3JfNk95S2J4U0RicXQ5T1FDdG91LVEwJnQ9NjM0ODU5NjA2NzgwMDAwMDAwJyk7X2JhY2tncm91bmQtaW1hZ2U6dXJsKCdXZWJSZXNvdXJjZS5heGQ/ZD1EaUcwR1RCREdxX1RCVll5MUlCaTI5b3pyTksyY3JUNlNrVWROOUdFZGlOYVI5ampnWFVWVGVpWXVxZEFQOTJSOFRYbmpOaHJDcDB4OUxCVUduX2JvZzBXeUpLcktoWG1meTBadUhhd2VTdG9ZTERBTVlESFR1c1Fwd09HODltTmMxTy1VdnVTbkUtcE10NWdXcjRWYVE5WFM0YVAyQU9NS1ZzMWdFc1RDNHhBR3pnSWZhaWVOY3BCa3lPMGFxUV8wJnQ9NjM0ODU5NjA2NzgwMDAwMDAwJyl9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYklucHV0Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYklucHV0Q2VsbFJpZ2h0e2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAwfS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JJbnB1dHtjb2xvcjpibGFjaztmb250Om5vcm1hbCAxMnB4ICJTZWdvZSBVSSIsQXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7bGluZS1oZWlnaHQ6MTZweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRW1wdHlNZXNzYWdle2NvbG9yOiM2NjY7Zm9udC1zdHlsZTppdGFsaWN9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkFycm93Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xNzZweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiQXJyb3dDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjotMThweCAtMTc2cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkFycm93Q2VsbExlZnQucmNiQXJyb3dDZWxsSGlkZGVue2JhY2tncm91bmQtcG9zaXRpb246MCAwfS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JBcnJvd0NlbGxSaWdodC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIDB9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkhvdmVyZWQgLnJjYklucHV0Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0yMnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIC5yY2JJbnB1dENlbGxSaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjEwMCUgLTIycHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkhvdmVyZWQgLnJjYklucHV0e2NvbG9yOmJsYWNrfS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIC5yY2JBcnJvd0NlbGxMZWZ0e2JhY2tncm91bmQtcG9zaXRpb246LTM2cHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIC5yY2JBcnJvd0NlbGxSaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01NHB4IC0xNzZweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiSG92ZXJlZCAucmNiQXJyb3dDZWxsTGVmdC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjowIC0yMnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIC5yY2JBcnJvd0NlbGxSaWdodC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIC0yMnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JGb2N1c2VkIC5yY2JJbnB1dENlbGxMZWZ0e2JhY2tncm91bmQtcG9zaXRpb246MCAtNDRweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRm9jdXNlZCAucmNiSW5wdXRDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIC00NHB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JGb2N1c2VkIC5yY2JJbnB1dHtjb2xvcjpibGFja30uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRm9jdXNlZCAucmNiQXJyb3dDZWxsTGVmdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi03MnB4IC0xNzZweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRm9jdXNlZCAucmNiQXJyb3dDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjotOTBweCAtMTc2cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkZvY3VzZWQgLnJjYkFycm93Q2VsbExlZnQucmNiQXJyb3dDZWxsSGlkZGVue2JhY2tncm91bmQtcG9zaXRpb246MCAtNDRweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRm9jdXNlZCAucmNiQXJyb3dDZWxsUmlnaHQucmNiQXJyb3dDZWxsSGlkZGVue2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAtNDRweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRGlzYWJsZWQgLnJjYklucHV0Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC02NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JEaXNhYmxlZCAucmNiSW5wdXRDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIC02NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JEaXNhYmxlZCAucmNiSW5wdXR7Y29sb3I6IzhkOGQ4ZH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRGlzYWJsZWQgLnJjYkFycm93Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTA4cHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JEaXNhYmxlZCAucmNiQXJyb3dDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTI2cHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JEaXNhYmxlZCAucmNiQXJyb3dDZWxsTGVmdC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjowIC02NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JEaXNhYmxlZCAucmNiQXJyb3dDZWxsUmlnaHQucmNiQXJyb3dDZWxsSGlkZGVue2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAtNjZweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiUmVhZE9ubHkgLnJjYklucHV0Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC04OHB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JSZWFkT25seSAucmNiSW5wdXRDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIC04OHB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JSZWFkT25seSAucmNiSW5wdXR7Y29sb3I6IzAwMTU2ZX0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiUmVhZE9ubHkgLnJjYkFycm93Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTQ0cHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTYycHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsTGVmdC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjowIC04OHB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsUmlnaHQucmNiQXJyb3dDZWxsSGlkZGVue2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAtODhweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiSG92ZXJlZCAucmNiUmVhZE9ubHkgLnJjYklucHV0Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xMTBweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiSG92ZXJlZCAucmNiUmVhZE9ubHkgLnJjYklucHV0Q2VsbFJpZ2h0e2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAtMTEwcHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkhvdmVyZWQgLnJjYlJlYWRPbmx5IC5yY2JJbnB1dHtjb2xvcjpibGFja30uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiSG92ZXJlZCAucmNiUmVhZE9ubHkgLnJjYkFycm93Q2VsbExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTgwcHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTk4cHggLTE3NnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsTGVmdC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xMTBweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiSG92ZXJlZCAucmNiUmVhZE9ubHkgLnJjYkFycm93Q2VsbFJpZ2h0LnJjYkFycm93Q2VsbEhpZGRlbntiYWNrZ3JvdW5kLXBvc2l0aW9uOjEwMCUgLTExMHB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JGb2N1c2VkIC5yY2JSZWFkT25seSAucmNiSW5wdXRDZWxsTGVmdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTEzMnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JGb2N1c2VkIC5yY2JSZWFkT25seSAucmNiSW5wdXRDZWxsUmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIC0xMzJweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRm9jdXNlZCAucmNiUmVhZE9ubHkgLnJjYklucHV0e2NvbG9yOmJsYWNrfS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JGb2N1c2VkIC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsTGVmdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMTZweCAtMTc2cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkZvY3VzZWQgLnJjYlJlYWRPbmx5IC5yY2JBcnJvd0NlbGxSaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMzRweCAtMTc2cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkZvY3VzZWQgLnJjYlJlYWRPbmx5IC5yY2JBcnJvd0NlbGxMZWZ0LnJjYkFycm93Q2VsbEhpZGRlbntiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTEzMnB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JGb2N1c2VkIC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsUmlnaHQucmNiQXJyb3dDZWxsSGlkZGVue2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAtMTMycHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkRpc2FibGVkIC5yY2JSZWFkT25seSAucmNiSW5wdXRDZWxsTGVmdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTE1NHB4fS5SYWRDb21ib0JveF9PZmZpY2UyMDA3IC5yY2JEaXNhYmxlZCAucmNiUmVhZE9ubHkgLnJjYklucHV0Q2VsbFJpZ2h0e2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAtMTU0cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkRpc2FibGVkIC5yY2JSZWFkT25seSAucmNiSW5wdXR7Y29sb3I6IzhkOGQ4ZH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRGlzYWJsZWQgLnJjYlJlYWRPbmx5IC5yY2JBcnJvd0NlbGxMZWZ0e2JhY2tncm91bmQtcG9zaXRpb246LTI1MnB4IC0xNzZweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRGlzYWJsZWQgLnJjYlJlYWRPbmx5IC5yY2JBcnJvd0NlbGxSaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNzBweCAtMTc2cHh9LlJhZENvbWJvQm94X09mZmljZTIwMDcgLnJjYkRpc2FibGVkIC5yY2JSZWFkT25seSAucmNiQXJyb3dDZWxsTGVmdC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xNTRweH0uUmFkQ29tYm9Cb3hfT2ZmaWNlMjAwNyAucmNiRGlzYWJsZWQgLnJjYlJlYWRPbmx5IC5yY2JBcnJvd0NlbGxSaWdodC5yY2JBcnJvd0NlbGxIaWRkZW57YmFja2dyb3VuZC1wb3NpdGlvbjoxMDAlIC0xNTRweH0uUmFkQ29tYm9Cb3hEcm9wRG93bl9PZmZpY2UyMDA3e2JvcmRlci1jb2xvcjojYWJjMWRlO2NvbG9yOmJsYWNrO2JhY2tncm91bmQ6d2hpdGU7Zm9udDpub3JtYWwgMTJweCAiU2Vnb2UgVUkiLEFyaWFsLEhlbHZldGljYSxzYW5zLXNlcmlmO2xpbmUtaGVpZ2h0OjE2cHh9LlJhZENvbWJvQm94RHJvcERvd25fT2ZmaWNlMjAwNyAucmNiSGVhZGVyLC5SYWRDb21ib0JveERyb3BEb3duX09mZmljZTIwMDcgLnJjYkZvb3Rlcntjb2xvcjpibGFjaztiYWNrZ3JvdW5kLWNvbG9yOiNiY2Q5ZmY7YmFja2dyb3VuZC1pbWFnZTp1cmwoJ1dlYlJlc291cmNlLmF4ZD9kPWdOMlFZOGpTMFk3QXBwMHJwY0tKaElKcWZ1eEY5RTBjZVlLc3FoY0FnUDJSNGVoSW9RWkU3NFJBRW9OX3dmbnFrX0hQRmozQXQxWkc3V28zUVFYcDhPcHdFNE5RRGZlOWt5S2lvdlR3UE1kOTgybkNUVkYtbXFMODBKVVluZlRhVTJLUktYeGxreWtxVFhoMVVIMmhzeTZQT1NpN2xEUjl2UnI2NFczUHBDcl82T3lLYnhTRGJxdDlPUUN0b3UtUTAmdD02MzQ4NTk2MDY3ODAwMDAwMDAnKTtfYmFja2dyb3VuZC1pbWFnZTp1cmwoJ1dlYlJlc291cmNlLmF4ZD9kPURpRzBHVEJER3FfVEJWWXkxSUJpMjlvenJOSzJjclQ2U2tVZE45R0VkaU5hUjlqamdYVVZUZWlZdXFkQVA5MlI4VFhuak5ockNwMHg5TEJVR25fYm9nMFd5SktyS2hYbWZ5MFp1SGF3ZVN0b1lMREFNWURIVHVzUXB3T0c4OW1OYzFPLVV2dVNuRS1wTXQ1Z1dyNFZhUTlYUzRhUDJBT01LVnMxZ0VzVEM0eEFHemdJZmFpZU5jcEJreU8wYXFRXzAmdD02MzQ4NTk2MDY3ODAwMDAwMDAnKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTUwMHB4fS5SYWRDb21ib0JveERyb3BEb3duX09mZmljZTIwMDcgLnJjYkhlYWRlcntib3JkZXItYm90dG9tLWNvbG9yOiNhYmMxZGV9LlJhZENvbWJvQm94RHJvcERvd25fT2ZmaWNlMjAwNyAucmNiRm9vdGVye2JvcmRlci10b3AtY29sb3I6I2FiYzFkZX0uUmFkQ29tYm9Cb3hEcm9wRG93bl9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVke2NvbG9yOiMwMDE1NmU7YmFja2dyb3VuZDojZmZlMjdifS5SYWRDb21ib0JveERyb3BEb3duX09mZmljZTIwMDcgLnJjYkxvYWRpbmd7Y29sb3I6IzAwMTU2ZTtiYWNrZ3JvdW5kOiNmZmUyN2J9LlJhZENvbWJvQm94RHJvcERvd25fT2ZmaWNlMjAwNyAucmNiSXRlbSBlbSwuUmFkQ29tYm9Cb3hEcm9wRG93bl9PZmZpY2UyMDA3IC5yY2JIb3ZlcmVkIGVte2NvbG9yOiMwMDE1NmU7YmFja2dyb3VuZDojZmZlMjdifS5SYWRDb21ib0JveERyb3BEb3duX09mZmljZTIwMDcgLnJjYkNoZWNrQWxsSXRlbXN7Y29sb3I6YmxhY2s7YmFja2dyb3VuZC1jb2xvcjojYmNkOWZmfS5SYWRDb21ib0JveERyb3BEb3duX09mZmljZTIwMDcgLnJjYkNoZWNrQWxsSXRlbXNIb3ZlcmVke2NvbG9yOmJsYWNrO2JhY2tncm91bmQtY29sb3I6I2JjZDlmZn0uUmFkQ29tYm9Cb3hEcm9wRG93bl9PZmZpY2UyMDA3IC5yY2JNb3JlUmVzdWx0c3tib3JkZXItdG9wLWNvbG9yOiNhYmMxZGU7Y29sb3I6YmxhY2s7YmFja2dyb3VuZC1jb2xvcjojYmNkOWZmO2JhY2tncm91bmQtcG9zaXRpb246MCAtNTAwcHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoJ1dlYlJlc291cmNlLmF4ZD9kPWdOMlFZOGpTMFk3QXBwMHJwY0tKaElKcWZ1eEY5RTBjZVlLc3FoY0FnUDJSNGVoSW9RWkU3NFJBRW9OX3dmbnFrX0hQRmozQXQxWkc3V28zUVFYcDhPcHdFNE5RRGZlOWt5S2lvdlR3UE1kOTgybkNUVkYtbXFMODBKVVluZlRhVTJLUktYeGxreWtxVFhoMVVIMmhzeTZQT1NpN2xEUjl2UnI2NFczUHBDcl82T3lLYnhTRGJxdDlPUUN0b3UtUTAmdD02MzQ4NTk2MDY3ODAwMDAwMDAnKTtfYmFja2dyb3VuZC1pbWFnZTp1cmwoJ1dlYlJlc291cmNlLmF4ZD9kPURpRzBHVEJER3FfVEJWWXkxSUJpMjlvenJOSzJjclQ2U2tVZE45R0VkaU5hUjlqamdYVVZUZWlZdXFkQVA5MlI4VFhuak5ockNwMHg5TEJVR25fYm9nMFd5SktyS2hYbWZ5MFp1SGF3ZVN0b1lMREFNWURIVHVzUXB3T0c4OW1OYzFPLVV2dVNuRS1wTXQ1Z1dyNFZhUTlYUzRhUDJBT01LVnMxZ0VzVEM0eEFHemdJZmFpZU5jcEJreU8wYXFRXzAmdD02MzQ4NTk2MDY3ODAwMDAwMDAnKX0uUmFkQ29tYm9Cb3hEcm9wRG93bl9PZmZpY2UyMDA3IC5yY2JNb3JlUmVzdWx0cyBhe2JhY2tncm91bmQtaW1hZ2U6dXJsKCdXZWJSZXNvdXJjZS5heGQ/ZD1nTjJRWThqUzBZN0FwcDBycGNLSmhJSnFmdXhGOUUwY2VZS3NxaGNBZ1AyUjRlaElvUVpFNzRSQUVvTl93Zm5xa19IUEZqM0F0MVpHN1dvM1FRWHA4T3B3RTROUURmZTlreUtpb3ZUd1BNZDk4Mm5DVFZGLW1xTDgwSlVZbmZUYVUyS1JLWHhsa3lrcVRYaDFVSDJoc3k2UE9TaTdsRFI5dlJyNjRXM1BwQ3JfNk95S2J4U0RicXQ5T1FDdG91LVEwJnQ9NjM0ODU5NjA2NzgwMDAwMDAwJyk7X2JhY2tncm91bmQtaW1hZ2U6dXJsKCdXZWJSZXNvdXJjZS5heGQ/ZD1EaUcwR1RCREdxX1RCVll5MUlCaTI5b3pyTksyY3JUNlNrVWROOUdFZGlOYVI5ampnWFVWVGVpWXVxZEFQOTJSOFRYbmpOaHJDcDB4OUxCVUduX2JvZzBXeUpLcktoWG1meTBadUhhd2VTdG9ZTERBTVlESFR1c1Fwd09HODltTmMxTy1VdnVTbkUtcE10NWdXcjRWYVE5WFM0YVAyQU9NS1ZzMWdFc1RDNHhBR3pnSWZhaWVOY3BCa3lPMGFxUV8wJnQ9NjM0ODU5NjA2NzgwMDAwMDAwJyk7YmFja2dyb3VuZC1wb3NpdGlvbjotMzA4cHggLTE4MXB4fS5SYWRDb21ib0JveERyb3BEb3duX09mZmljZTIwMDcgLnJjYlNlcGFyYXRvcntjb2xvcjojMDAwO2JhY2tncm91bmQ6I2ZjYzM2NX0=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="101" hostname="nopc.shaft.com" path="/WebResource.axd?d=7MJY0jNOAc01Ye-opRMcn2EV4OKTZohPYkz_p_m5xyuTpMtAXobPnQ30j6_SXfSIF_fpWpsD7Q4-KZVvMrPueS2mtmhXQwoynNEapv-I-6-9gd4C_YHEMIccXIi3F2YeKzkDcHV7QlTNG_vR4lRPrneUOLEGoAoGY_0dP3zDAed3FodajFb--XebA0JWMJn40&amp;t=634859606780000000" url="http://nopc.shaft.com/WebResource.axd?d=7MJY0jNOAc01Ye-opRMcn2EV4OKTZohPYkz_p_m5xyuTpMtAXobPnQ30j6_SXfSIF_fpWpsD7Q4-KZVvMrPueS2mtmhXQwoynNEapv-I-6-9gd4C_YHEMIccXIi3F2YeKzkDcHV7QlTNG_vR4lRPrneUOLEGoAoGY_0dP3zDAed3FodajFb--XebA0JWMJn40&amp;t=634859606780000000" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16331" connectionId="1888" origin="HTML" encodingType="ANSI" ordinal="3" startDateTime="2019-01-04T16:15:53.635+05:30" startTime="26758" endTime="26913" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZD03TUpZMGpOT0FjMDFZZS1vcFJNY24yRVY0T0tUWm9oUFlrel9wX201eHl1VHBNdEFYb2JQblEzMGo2X1NYZlNJRl9mcFdwc0Q3UTQtS1pWdk1yUHVlUzJtdG1oWFF3b3luTkVhcHYtSS02LTlnZDRDX1lIRU1JY2NYSWkzRjJZZUt6a0RjSFY3UWxUTkdfdlI0bFJQcm5lVU9MRUdvQW9HWV8wZFAzekRBZWQzRm9kYWpGYi0tWGViQTBKV01KbjQwJnQ9NjM0ODU5NjA2NzgwMDAwMDAw</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="d" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>N01KWTBqTk9BYzAxWWUtb3BSTWNuMkVWNE9LVFpvaFBZa3pfcF9tNXh5dVRwTXRBWG9iUG5RMzBqNl9TWGZTSUZfZnBXcHNEN1E0LUtaVnZNclB1ZVMybXRtaFhRd295bk5FYXB2LUktNi05Z2Q0Q19ZSEVNSWNjWElpM0YyWWVLemtEY0hWN1FsVE5HX3ZSNGxSUHJuZVVPTEVHb0FvR1lfMGRQM3pEQWVkM0ZvZGFqRmItLVhlYkEwSldNSm40MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="t" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NjM0ODU5NjA2NzgwMDAwMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9XZWJSZXNvdXJjZS5heGQ/ZD03TUpZMGpOT0FjMDFZZS1vcFJNY24yRVY0T0tUWm9oUFlrel9wX201eHl1VHBNdEFYb2JQblEzMGo2X1NYZlNJRl9mcFdwc0Q3UTQtS1pWdk1yUHVlUzJtdG1oWFF3b3luTkVhcHYtSS02LTlnZDRDX1lIRU1JY2NYSWkzRjJZZUt6a0RjSFY3UWxUTkdfdlI0bFJQcm5lVU9MRUdvQW9HWV8wZFAzekRBZWQzRm9kYWpGYi0tWGViQTBKV01KbjQwJnQ9NjM0ODU5NjA2NzgwMDAwMDAwIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbm9wYy5zaGFmdC5jb20vRW1wbG95ZWVEZXRhaWxzLmFzcHgNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83MS4wLjM1NzguOTggU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbm9wYy5zaGFmdC5jb20NCkNvb2tpZTogQVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0YnloDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>1144</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Cache-Control" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGlj</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwNCBKYW4gMjAyMCAwNToxMTowMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAxNSBPY3QgMjAxMiAyMzozNDozOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-AspNet-Version" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NC4wLjMwMzE5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTE0NA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwdWJsaWMNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3MNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkV4cGlyZXM6IFNhdCwgMDQgSmFuIDIwMjAgMDU6MTE6MDIgR01UDQpMYXN0LU1vZGlmaWVkOiBNb24sIDE1IE9jdCAyMDEyIDIzOjM0OjM4IEdNVA0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvMTAuMA0KWC1Bc3BOZXQtVmVyc2lvbjogNC4wLjMwMzE5DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MTkgR01UDQpDb250ZW50LUxlbmd0aDogMTE0NA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>77u/LlJhZEJ1dHRvbl9PZmZpY2UyMDA3e2ZvbnQtZmFtaWx5OiJTZWdvZSBVSSIsQXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEycHh9LlJhZEJ1dHRvbl9PZmZpY2UyMDA3IC5yYkRlY29yYXRlZHtmb250LWZhbWlseToiU2Vnb2UgVUkiLEFyaWFsLEhlbHZldGljYSxzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMnB4fS5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYlNraW5uZWRCdXR0b24sLlJhZEJ1dHRvbl9PZmZpY2UyMDA3IC5yYkRlY29yYXRlZCwuUmFkQnV0dG9uX09mZmljZTIwMDcucmJWZXJ0aWNhbEJ1dHRvbiwuUmFkQnV0dG9uX09mZmljZTIwMDcucmJWZXJ0aWNhbEJ1dHRvbiAucmJEZWNvcmF0ZWQsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3IC5yYlNwbGl0UmlnaHQsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3IC5yYlNwbGl0TGVmdHtiYWNrZ3JvdW5kLWltYWdlOnVybCgnV2ViUmVzb3VyY2UuYXhkP2Q9WDBmNlZPaUFuQVpabm9pNU9lNENRUGEyUDRUVS12OFJFTWZIenJaRGwwZDd2RTRacGtoLWx2T1FFc2JDaHY5cVNuUW9RZ0lfVk9JS05kWHpGcFpaVklQaksyUXVoSllqcFVBdmVfQ0NvWmdSSUlCZjJUalEybjNwdjhMS043RVVIU2hJalpvZ3dwVVF5dGdaWDdkSVJ2X3JsWXhkNDhJaEhXdThoTlgza2RVYW00Ql91YXJuVWpFNHVfNFN6UF9xMCZ0PTYzNDg1OTYwNjc4MDAwMDAwMCcpO2NvbG9yOiMwMDE1NmV9LlJhZEJ1dHRvbl9PZmZpY2UyMDA3IC5yYlRvZ2dsZUNoZWNrYm94LC5SYWRCdXR0b25fT2ZmaWNlMjAwNyAucmJUb2dnbGVDaGVja2JveENoZWNrZWQsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3IC5yYlRvZ2dsZUNoZWNrYm94RmlsbGVkLC5SYWRCdXR0b25fT2ZmaWNlMjAwNyAucmJUb2dnbGVSYWRpbywuUmFkQnV0dG9uX09mZmljZTIwMDcgLnJiVG9nZ2xlUmFkaW9DaGVja2Vke2JhY2tncm91bmQtaW1hZ2U6dXJsKCdXZWJSZXNvdXJjZS5heGQ/ZD1Oc1JGUEl6cVFhMmpJbENRcVJoRDdNN2t5N2hXNElqd2lCZnkwNG8tWGNNQ1VTUUxIeTl2MnpkeW1OVDJiOEItYjJMeThHYllNZ3VxSjlINTdGY2NlZGxiaGo1Z2RLYlZiQjYyRmdKOWplTmJzZkkzOHc4eW5QU0E5WDNieXBFTnFuemZGYV8tdmtMRnNEVHVOTmQzOFdpVmVmNWpPN29wRUF5UHd4a3ZOXzh6NmlyZWg1OUY1UVhxRmJzaHpFRGEwJnQ9NjM0ODU5NjA2NzgwMDAwMDAwJyl9LlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiVG9nZ2xlQnV0dG9uLC5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYlRvZ2dsZUJ1dHRvbi5yYkRpc2FibGVkOmhvdmVye2NvbG9yOmJsYWNrfS5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYlRvZ2dsZUJ1dHRvbjpob3Zlcntjb2xvcjpibGFja30uUmFkQnV0dG9uX09mZmljZTIwMDcuUmFkQnV0dG9uLnJiTGlua0J1dHRvbntiYWNrZ3JvdW5kLWNvbG9yOiNkMmUxZjQ7Ym9yZGVyOjFweCBzb2xpZCAjYTdiZWRiO19ib3JkZXI6MXB4IHNvbGlkICNhN2JlZGIhaW1wb3J0YW50O2NvbG9yOiMwMDE1NmV9LlJhZEJ1dHRvbl9PZmZpY2UyMDA3LlJhZEJ1dHRvbi5yYkxpbmtCdXR0b246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZkNTYzO19ib3JkZXI6MXB4IHNvbGlkICNhN2JlZGIhaW1wb3J0YW50O2NvbG9yOmJsYWNrfS5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYkxpbmtCdXR0b25DaGVja2VkLC5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYkxpbmtCdXR0b25DaGVja2VkOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2QyZTFmNDtjb2xvcjojMDAxNTZlO2JvcmRlcjoxcHggc29saWQgI2E3YmVkYn0uUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uLnJiRGlzYWJsZWQsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbi5yYkRpc2FibGVkOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2RkZThmNTtib3JkZXI6MXB4IHNvbGlkICM5ZWJmZGI7Y29sb3I6IzhkOGQ4ZH0uUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uOmhvdmVyIC5yYlNwbGl0TGVmdCwuUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uOmhvdmVyIC5yYlNwbGl0UmlnaHR7YmFja2dyb3VuZC1jb2xvcjojZDJlMWY0fS5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYkxpbmtCdXR0b24gLnJiU3BsaXRSaWdodHtib3JkZXItbGVmdDoxcHggc29saWQgI2E3YmVkYn0uUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uIC5yYlNwbGl0UmlnaHQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZkNTYzO2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjYzZiYTlkfS5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYkxpbmtCdXR0b24gLnJiU3BsaXRSaWdodDphY3RpdmUsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbiAucmJTcGxpdFJpZ2h0OmZvY3Vze2JhY2tncm91bmQtY29sb3I6I2Y5OTYzMTtib3JkZXItbGVmdDoxcHggc29saWQgI2M2YmE5ZH0uUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uIC5yYlNwbGl0TGVmdHtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNhN2JlZGJ9LlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbiAucmJTcGxpdExlZnQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZkNTYzO2JvcmRlci1yaWdodDoxcHggc29saWQgI2M2YmE5ZH0uUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uIC5yYlNwbGl0TGVmdDphY3RpdmUsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbiAucmJTcGxpdExlZnQ6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojZjk5NjMxO2JvcmRlci1yaWdodDoxcHggc29saWQgI2M2YmE5ZH0uUmFkQnV0dG9uX09mZmljZTIwMDcucmJMaW5rQnV0dG9uLnJiRGlzYWJsZWQgLnJiU3BsaXRMZWZ0LC5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYkxpbmtCdXR0b24ucmJEaXNhYmxlZCAucmJTcGxpdExlZnQ6aG92ZXIsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbi5yYkRpc2FibGVkIC5yYlNwbGl0TGVmdDphY3RpdmUsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbi5yYkRpc2FibGVkIC5yYlNwbGl0TGVmdDpmb2N1c3tib3JkZXItcmlnaHQ6MXB4IHNvbGlkICM5ZWJmZGJ9LlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbi5yYkRpc2FibGVkIC5yYlNwbGl0UmlnaHQsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbi5yYkRpc2FibGVkIC5yYlNwbGl0UmlnaHQ6aG92ZXIsLlJhZEJ1dHRvbl9PZmZpY2UyMDA3LnJiTGlua0J1dHRvbi5yYkRpc2FibGVkIC5yYlNwbGl0UmlnaHQ6YWN0aXZlLC5SYWRCdXR0b25fT2ZmaWNlMjAwNy5yYkxpbmtCdXR0b24ucmJEaXNhYmxlZCAucmJTcGxpdFJpZ2h0OmZvY3Vze2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjOWViZmRifQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="102" hostname="nopc.shaft.com" path="/Telerik.Web.UI.WebResource.axd?_TSM_HiddenField_=RadScriptManager1_TSM&amp;compress=1&amp;_TSM_CombinedScripts_=%3b%3bSystem.Web.Extensions%2c+Version%3d4.0.0.0%2c+Culture%3dneutral%2c+PublicKeyToken%3d31bf3856ad364e35%3aen-US%3ab7585254-495e-4311-9545-1f910247aca5%3aea597d4b%3ab25378d2%3bTelerik.Web.UI%2c+Version%3d2012.3.1016.40%2c+Culture%3dneutral%2c+PublicKeyToken%3d121fae78165ba3d4%3aen-US%3aeedc0a8d-48b8-46b8-a699-de66b4bdef1e%3a16e4e7cd%3af7645509%3a24ee1bba%3a19620875%3a874f8ea2%3af46195d3%3a490a9d4e%3abd8f85e4%3a86526ba7%3aed16cbdc%3a58366029%3a2003d0b8%3a1e771326%3aaa288e2d%3ae330518b%3ac8618e41%3ae4f8f289%3a7165f74" url="http://nopc.shaft.com/Telerik.Web.UI.WebResource.axd?_TSM_HiddenField_=RadScriptManager1_TSM&amp;compress=1&amp;_TSM_CombinedScripts_=%3b%3bSystem.Web.Extensions%2c+Version%3d4.0.0.0%2c+Culture%3dneutral%2c+PublicKeyToken%3d31bf3856ad364e35%3aen-US%3ab7585254-495e-4311-9545-1f910247aca5%3aea597d4b%3ab25378d2%3bTelerik.Web.UI%2c+Version%3d2012.3.1016.40%2c+Culture%3dneutral%2c+PublicKeyToken%3d121fae78165ba3d4%3aen-US%3aeedc0a8d-48b8-46b8-a699-de66b4bdef1e%3a16e4e7cd%3af7645509%3a24ee1bba%3a19620875%3a874f8ea2%3af46195d3%3a490a9d4e%3abd8f85e4%3a86526ba7%3aed16cbdc%3a58366029%3a2003d0b8%3a1e771326%3aaa288e2d%3ae330518b%3ac8618e41%3ae4f8f289%3a7165f74" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16336" connectionId="1900" origin="HTML" encodingType="ANSI" ordinal="4" startDateTime="2019-01-04T16:15:53.720+05:30" startTime="26838" endTime="29414" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>X1RTTV9IaWRkZW5GaWVsZF89UmFkU2NyaXB0TWFuYWdlcjFfVFNNJmNvbXByZXNzPTEmX1RTTV9Db21iaW5lZFNjcmlwdHNfPSUzYiUzYlN5c3RlbS5XZWIuRXh0ZW5zaW9ucyUyYytWZXJzaW9uJTNkNC4wLjAuMCUyYytDdWx0dXJlJTNkbmV1dHJhbCUyYytQdWJsaWNLZXlUb2tlbiUzZDMxYmYzODU2YWQzNjRlMzUlM2Flbi1VUyUzYWI3NTg1MjU0LTQ5NWUtNDMxMS05NTQ1LTFmOTEwMjQ3YWNhNSUzYWVhNTk3ZDRiJTNhYjI1Mzc4ZDIlM2JUZWxlcmlrLldlYi5VSSUyYytWZXJzaW9uJTNkMjAxMi4zLjEwMTYuNDAlMmMrQ3VsdHVyZSUzZG5ldXRyYWwlMmMrUHVibGljS2V5VG9rZW4lM2QxMjFmYWU3ODE2NWJhM2Q0JTNhZW4tVVMlM2FlZWRjMGE4ZC00OGI4LTQ2YjgtYTY5OS1kZTY2YjRiZGVmMWUlM2ExNmU0ZTdjZCUzYWY3NjQ1NTA5JTNhMjRlZTFiYmElM2ExOTYyMDg3NSUzYTg3NGY4ZWEyJTNhZjQ2MTk1ZDMlM2E0OTBhOWQ0ZSUzYWJkOGY4NWU0JTNhODY1MjZiYTclM2FlZDE2Y2JkYyUzYTU4MzY2MDI5JTNhMjAwM2QwYjglM2ExZTc3MTMyNiUzYWFhMjg4ZTJkJTNhZTMzMDUxOGIlM2FjODYxOGU0MSUzYWU0ZjhmMjg5JTNhNzE2NWY3NA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="_TSM_HiddenField_" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UmFkU2NyaXB0TWFuYWdlcjFfVFNN</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="compress" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="_TSM_CombinedScripts_" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JTNiJTNiU3lzdGVtLldlYi5FeHRlbnNpb25zJTJjK1ZlcnNpb24lM2Q0LjAuMC4wJTJjK0N1bHR1cmUlM2RuZXV0cmFsJTJjK1B1YmxpY0tleVRva2VuJTNkMzFiZjM4NTZhZDM2NGUzNSUzYWVuLVVTJTNhYjc1ODUyNTQtNDk1ZS00MzExLTk1NDUtMWY5MTAyNDdhY2E1JTNhZWE1OTdkNGIlM2FiMjUzNzhkMiUzYlRlbGVyaWsuV2ViLlVJJTJjK1ZlcnNpb24lM2QyMDEyLjMuMTAxNi40MCUyYytDdWx0dXJlJTNkbmV1dHJhbCUyYytQdWJsaWNLZXlUb2tlbiUzZDEyMWZhZTc4MTY1YmEzZDQlM2Flbi1VUyUzYWVlZGMwYThkLTQ4YjgtNDZiOC1hNjk5LWRlNjZiNGJkZWYxZSUzYTE2ZTRlN2NkJTNhZjc2NDU1MDklM2EyNGVlMWJiYSUzYTE5NjIwODc1JTNhODc0ZjhlYTIlM2FmNDYxOTVkMyUzYTQ5MGE5ZDRlJTNhYmQ4Zjg1ZTQlM2E4NjUyNmJhNyUzYWVkMTZjYmRjJTNhNTgzNjYwMjklM2EyMDAzZDBiOCUzYTFlNzcxMzI2JTNhYWEyODhlMmQlM2FlMzMwNTE4YiUzYWM4NjE4ZTQxJTNhZTRmOGYyODklM2E3MTY1Zjc0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9UZWxlcmlrLldlYi5VSS5XZWJSZXNvdXJjZS5heGQ/X1RTTV9IaWRkZW5GaWVsZF89UmFkU2NyaXB0TWFuYWdlcjFfVFNNJmNvbXByZXNzPTEmX1RTTV9Db21iaW5lZFNjcmlwdHNfPSUzYiUzYlN5c3RlbS5XZWIuRXh0ZW5zaW9ucyUyYytWZXJzaW9uJTNkNC4wLjAuMCUyYytDdWx0dXJlJTNkbmV1dHJhbCUyYytQdWJsaWNLZXlUb2tlbiUzZDMxYmYzODU2YWQzNjRlMzUlM2Flbi1VUyUzYWI3NTg1MjU0LTQ5NWUtNDMxMS05NTQ1LTFmOTEwMjQ3YWNhNSUzYWVhNTk3ZDRiJTNhYjI1Mzc4ZDIlM2JUZWxlcmlrLldlYi5VSSUyYytWZXJzaW9uJTNkMjAxMi4zLjEwMTYuNDAlMmMrQ3VsdHVyZSUzZG5ldXRyYWwlMmMrUHVibGljS2V5VG9rZW4lM2QxMjFmYWU3ODE2NWJhM2Q0JTNhZW4tVVMlM2FlZWRjMGE4ZC00OGI4LTQ2YjgtYTY5OS1kZTY2YjRiZGVmMWUlM2ExNmU0ZTdjZCUzYWY3NjQ1NTA5JTNhMjRlZTFiYmElM2ExOTYyMDg3NSUzYTg3NGY4ZWEyJTNhZjQ2MTk1ZDMlM2E0OTBhOWQ0ZSUzYWJkOGY4NWU0JTNhODY1MjZiYTclM2FlZDE2Y2JkYyUzYTU4MzY2MDI5JTNhMjAwM2QwYjglM2ExZTc3MTMyNiUzYWFhMjg4ZTJkJTNhZTMzMDUxOGIlM2FjODYxOGU0MSUzYWU0ZjhmMjg5JTNhNzE2NWY3NCBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzEuMC4zNTc4Ljk4IFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG5vcGMuc2hhZnQuY29tDQpDb29raWU6IEFTUC5ORVRfU2Vzc2lvbklkPTIzdG5scjIwNWNkcWVncW5sbWVmdGJ5aA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>262326</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Cache-Control" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTE1ODgx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24veC1qYXZhc2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Expires" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwNCBKYW4gMjAyMCAwNToxMTowMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAxNiBPY3QgMjAxMiAwMDowMDowMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VXNlci1BZ2VudA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-AspNet-Version" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NC4wLjMwMzE5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjYyMzI2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwdWJsaWMsIG1heC1hZ2U9MzE1MTU4ODENCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC1qYXZhc2NyaXB0DQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpFeHBpcmVzOiBTYXQsIDA0IEphbiAyMDIwIDA1OjExOjAxIEdNVA0KTGFzdC1Nb2RpZmllZDogVHVlLCAxNiBPY3QgMjAxMiAwMDowMDowMCBHTVQNClZhcnk6IFVzZXItQWdlbnQNClNlcnZlcjogTWljcm9zb2Z0LUlJUy8xMC4wDQpYLUFzcE5ldC1WZXJzaW9uOiA0LjAuMzAzMTkNClgtUG93ZXJlZC1CeTogQVNQLk5FVA0KRGF0ZTogRnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAyNjIzMjYNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="103" hostname="nopc.shaft.com" path="/Images/AddRecord.gif" url="http://nopc.shaft.com/Images/AddRecord.gif" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16337" connectionId="1908" origin="HTML" encodingType="ANSI" ordinal="5" startDateTime="2019-01-04T16:15:53.766+05:30" startTime="26889" endTime="27084" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9JbWFnZXMvQWRkUmVjb3JkLmdpZiBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzEuMC4zNTc4Ljk4IFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG5vcGMuc2hhZnQuY29tDQpDb29raWU6IEFTUC5ORVRfU2Vzc2lvbklkPTIzdG5scjIwNWNkcWVncW5sbWVmdGJ5aA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>640</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvZ2lm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAwMyBPY3QgMjAxNiAwNzo0MTowMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjA0ZTI4N2M0OTFkZDIxOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NjQw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL2dpZg0KTGFzdC1Nb2RpZmllZDogTW9uLCAwMyBPY3QgMjAxNiAwNzo0MTowMCBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpFVGFnOiAiMDRlMjg3YzQ5MWRkMjE6MCINClNlcnZlcjogTWljcm9zb2Z0LUlJUy8xMC4wDQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MTkgR01UDQpDb250ZW50LUxlbmd0aDogNjQwDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0lGODlhEAAQAOZ/AIKbpk6LZkSOMkKFWjl7TVuMomWQo6isqlOPaaWopZatnFWRaVWRalGOaFCNaFCNZ325PCt2RF2NopqlqVqVam6uOaurq0+MZ6iqq3q3O4adp06MZ0+NZ1+Oo0yRP2iga0F+VDSBLlqUaWWdbEyRPWmNc6eqqUeNPDqATTiBNyd1MWyhcVmVY2ifbDF/LoaajGmcYUqQOjJ7SUyPSmqrOaOoo4Scp1qaSHaYf2efbFaaO06SPkyTM1mUa2ioP6mtqkWLO0aMO1CXM3SzOm2VcEiEWEyKVjaAOHedgD2IMJ6woSh2OC56OHabdS19L0aMQD2GOGGabY6hjYSihIibjXKmciBwL1iTaXCvOlyWbE6MaD17UHSobT+CV5+mqilyQWOlNy51RUqSMzt8Tz15TxlrLVeSaVOQZ1GWOVSSYEiJSXKZezJ8OGadbyh4MS97NFmeNk6SPTB3Rk2VNGyPdlubRoXAPlOZNFabNlqYQ3u4O5KnmEGCn1eLov///0CCnyH5BAEAAH8ALAAAAAAQABAAAAfdgH+Cf3wFABgYAAV8g419CXRkBGMgOCZ9jX8GVF9dHBsbHAMRewaDHS8RAQFaDggLDQ0yChKECWEXAQ4Nfn5ZFCJXKAd/EiUDFwhmDL1RLTkjaUh9GlsPuww9vW0rVVUfRgAmcmcIvefnXE9sE14EFGfo6B4CRxMaRSxLZVYqvVBASOiYo8aGhDVuXCQR86ZXECwVaAgh0ofPDyYhBNxJ0SsOBD0VYtQQ1EGBEwFw0JzY4cNOBjxTagkyoGQGDzBDIGSgkUeKKUcHpsC4UQdGkwSYMhEyZMGCIkaDAgEAOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="104" hostname="nopc.shaft.com" path="/Images/Delete.gif" url="http://nopc.shaft.com/Images/Delete.gif" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16331" connectionId="1888" origin="HTML" encodingType="ANSI" ordinal="6" startDateTime="2019-01-04T16:15:53.782+05:30" startTime="26914" endTime="27080" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9JbWFnZXMvRGVsZXRlLmdpZiBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzEuMC4zNTc4Ljk4IFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG5vcGMuc2hhZnQuY29tDQpDb29raWU6IEFTUC5ORVRfU2Vzc2lvbklkPTIzdG5scjIwNWNkcWVncW5sbWVmdGJ5aA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>328</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvZ2lm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAwMyBPY3QgMjAxNiAwNzo0MTowMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjA0ZTI4N2M0OTFkZDIxOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzI4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL2dpZg0KTGFzdC1Nb2RpZmllZDogTW9uLCAwMyBPY3QgMjAxNiAwNzo0MTowMCBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpFVGFnOiAiMDRlMjg3YzQ5MWRkMjE6MCINClNlcnZlcjogTWljcm9zb2Z0LUlJUy8xMC4wDQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MTkgR01UDQpDb250ZW50LUxlbmd0aDogMzI4DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0lGODlhEAAQANUyAMK4m9rUw4+EZ/Px7GtmWX52YGplWJKHaF5bU1RST46EZ1JRTol/ZdbPvHhxXnlyXmJeVU9OTcvDqndwXXFrW2xnWWRgVouBZU1NTXZvXcG4m3tzX2lkV+Tg0+Ldz1lXUW9qWnNtXFxaU311YOjk2Yh+ZIV8Y1dVUH93YIuBZoJ5YmVhVsnAp6mee+7r40xMTKiZcf///////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAADIALAAAAAAQABAAAAZlQJlwSCwaZYpL6Tg8CFKwGGz0yBgFsEAsEIB5YYQiw6QqbCYhUIWzMqJiAxfJ44UcHVJXiwUDiI4UeXswGidHBoJ8AAtHFol9EUcIjwAvRx+UlkYJMXAdDRIvmkYYoqajTKmqR0EAOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="105" hostname="nopc.shaft.com" path="/Icons/edit-icon.gif" url="http://nopc.shaft.com/Icons/edit-icon.gif" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16334" connectionId="1876" origin="HTML" encodingType="ANSI" ordinal="7" startDateTime="2019-01-04T16:15:53.804+05:30" startTime="26934" endTime="27077" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9JY29ucy9lZGl0LWljb24uZ2lmIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbm9wYy5zaGFmdC5jb20vRW1wbG95ZWVEZXRhaWxzLmFzcHgNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83MS4wLjM1NzguOTggU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbm9wYy5zaGFmdC5jb20NCkNvb2tpZTogQVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0YnloDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>307</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvZ2lm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAwMyBPY3QgMjAxNiAwNzo0MDo1MiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjA5YTYzNzc0OTFkZDIxOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoxOSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzA3</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL2dpZg0KTGFzdC1Nb2RpZmllZDogTW9uLCAwMyBPY3QgMjAxNiAwNzo0MDo1MiBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpFVGFnOiAiMDlhNjM3NzQ5MWRkMjE6MCINClNlcnZlcjogTWljcm9zb2Z0LUlJUy8xMC4wDQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MTkgR01UDQpDb250ZW50LUxlbmd0aDogMzA3DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0lGODlhDgAOANU7AOm1HdDAcOm0HfjdpLBnDqNVC9zIYbt3FaJTC20/P/bFFKwpKfTDFpOTkuMiIrZlDXpERKRYC7BjDalUEPjIEWZPOtS3Qs+/c7dsC/Xknt/c3N6/QNvIY/zivNTQ0KpgDK+XZ7FlDOq3HtzJYK8hIfHfk+FCQuTJT4+PjtXEY865e+7bhIE8PKxhDXg8PKJRDLFAQB8bF7wxMb2yhIBiR93XwO27HOXOXbxyC+/EbP///////wAAAAAAAAAAAAAAACH5BAEAADsALAAAAAAOAA4AAAZQwJ1wSNxBYMVkQuZYJIcoDcnEeu5mOp3HZR1ZarqG1bChHEBWzkmBI1hTNwbmYw2sbKGI9VISSQpWKhkALQhWOwMCDy+HFR05E4c7MTSSQkEAOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="106" hostname="nopc.shaft.com" path="/Images/deleteRecordBtn.gif" url="http://nopc.shaft.com/Images/deleteRecordBtn.gif" ip="10.10.10.53" port="80" client_ip="192.168.0.24" client_port="16335" connectionId="1828" origin="HTML" encodingType="ANSI" ordinal="8" startDateTime="2019-01-04T16:15:53.951+05:30" startTime="27075" endTime="27391" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9wYy5zaGFmdC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVF9TZXNzaW9uSWQ9MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9JbWFnZXMvZGVsZXRlUmVjb3JkQnRuLmdpZiBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL25vcGMuc2hhZnQuY29tL0VtcGxveWVlRGV0YWlscy5hc3B4DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzEuMC4zNTc4Ljk4IFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG5vcGMuc2hhZnQuY29tDQpDb29raWU6IEFTUC5ORVRfU2Vzc2lvbklkPTIzdG5scjIwNWNkcWVncW5sbWVmdGJ5aA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="ASP.NET_SessionId" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjN0bmxyMjA1Y2RxZWdxbmxtZWZ0Ynlo</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>325</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvZ2lm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAwMyBPY3QgMjAxNiAwNzo0MTowMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjA0ZTI4N2M0OTFkZDIxOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy8xMC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNCBKYW4gMjAxOSAxMDo0NjoyMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzI1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL2dpZg0KTGFzdC1Nb2RpZmllZDogTW9uLCAwMyBPY3QgMjAxNiAwNzo0MTowMCBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpFVGFnOiAiMDRlMjg3YzQ5MWRkMjE6MCINClNlcnZlcjogTWljcm9zb2Z0LUlJUy8xMC4wDQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IEZyaSwgMDQgSmFuIDIwMTkgMTA6NDY6MjAgR01UDQpDb250ZW50LUxlbmd0aDogMzI1DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0lGODlhDQAPANUyANrUw/Px7I+EZ09OTX93YGtmWX52YF5bU1xaU2lkV2JeVeLdz3tzX3lyXol/ZYJ5YnhxXtbPvHdwXXFrW8G4m4uBZo6EZ2VhVouBZW9qWpKHaFJRTuTg02plWHNtXIV8Y1dVUHZvXYh+ZGRgVujk2WxnWX11YMvDqlRST1lXUU1NTcK4m8nAp6mee+7r40xMTKiZcf///////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAADIALAAAAAANAA8AAAZiQJlwSCwOLRiRUaYRVGAxmKkRGgpggBgAAOvCCkLH52FgSDyZUuIyJMQCLtKiqyBCoq4WC7ZCECd4ejAUIEQdgXsrG0QjiHwDRAeOKy9EKZOVQygxbxwRJy+ZQyqhpaJLRkEAOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>